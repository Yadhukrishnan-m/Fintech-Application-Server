name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REPO_URL: https://github.com/Yadhukrishnan-m/Fintech-Appliation-Server.git
        run: |
          echo "$SSH_PRIVATE_KEY" > key.pem
          chmod 400 key.pem

          ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USERNAME@$EC2_HOST << 'ENDSSH'
            # Navigate to project directory or clone if it doesn't exist
            if [ -d "~/Fintech-Appliation-Server" ]; then
              cd ~/Fintech-Appliation-Server
              git pull origin main
            else
              git clone https://github.com/Yadhukrishnan-m/Fintech-Appliation-Server.git ~/Fintech-Appliation-Server
              cd ~/Fintech-Appliation-Server
            fi
            
            # Install dependencies and build
            npm ci
            npm run build
            
            # Create/update .env file
            cat > .env << 'ENVFILE'
            MONGO_URI=${{ secrets.MONGO_URI }}
            PORT=${{ secrets.PORT }}
            EMAIL_USER=${{ secrets.EMAIL_USER }}
            EMAIL_PASS=${{ secrets.EMAIL_PASS }}
            ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}
            REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}
            ACCESS_TOKEN_EXPIRY=${{ secrets.ACCESS_TOKEN_EXPIRY }}
            REFRESH_TOKEN_EXPIRY=${{ secrets.REFRESH_TOKEN_EXPIRY }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            FRONTEND_URI=${{ secrets.FRONTEND_URI }}
            URL_EXPIRY=${{ secrets.URL_EXPIRY }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION=${{ secrets.AWS_REGION }}
            AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }}
            REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
            REDIS_HOST=${{ secrets.REDIS_HOST }}
            REDIS_PORT=${{ secrets.REDIS_PORT }}
            RAZORPAY_KEY_ID=${{ secrets.RAZORPAY_KEY_ID }}
            RAZORPAY_KEY_SECRET=${{ secrets.RAZORPAY_KEY_SECRET }}
            ENVFILE
            
            # Check if the app is already running in PM2
            pm2 list | grep -q "quickfin" || pm2 list | grep -q "app"
            if [ $? -eq 0 ]; then
              # Restart app if it exists
              pm2 restart quickfin || pm2 restart app
            else
              # Start new process if it doesn't exist
              pm2 start dist/index.js --name quickfin
            fi
            
            # Save PM2 process list
            pm2 save
          ENDSSH

          rm key.pem
